{
	"info": {
		"_postman_id": "cd2553e2-bb56-44fd-a296-1fac3b2859f6",
		"name": "Fietsverzekering",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HomePage: Calculator Init Checks",
			"item": [
				{
					"name": "Checks Calculator Init",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c7d59ed-7c2b-4436-84f9-af24f5611e6f",
								"exec": [
									"// Check response code = 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Get data from response",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
									"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
									"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
									"",
									"// Check the calculator title",
									"pm.test(\"Test: CalculatorTitle\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ContentModel.CalculatorTitle).to.include(\"Bereken je tarief\");",
									"});",
									"",
									"// Check the minimum price of 25 euro",
									"pm.test(\"Test: MinimumPrice: 25 euro\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ContentModel.HeaderItems[0].MinimumPrice).to.eql(\"&euro; 25\");",
									"    pm.expect(jsonData.ContentModel.HeaderItems[0].Label).to.eql(\"vanaf\");",
									"});",
									"",
									"// Check the Bicycle types",
									"pm.test(\"Test: BicycleType\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ContentModel.BicycleType.Options[0].Label).to.eql(\"Elektrische fiets\");",
									"//    pm.expect(jsonData.ContentModel.BicycleType.Options[0].Value).to.eql(\"Electric\");     // NET-1345",
									"    pm.expect(jsonData.ContentModel.BicycleType.Options[0].Value).to.eql(\"E-Bike\");         // NET-1345",
									"    pm.expect(jsonData.ContentModel.BicycleType.Options[0].ToolTip).to.eql(\"Tot 25 km/u\");  ",
									"    pm.expect(jsonData.ContentModel.BicycleType.Options[1].Label).to.eql(\"Stadsfiets\");  ",
									"    pm.expect(jsonData.ContentModel.BicycleType.Options[1].Value).to.eql(\"Stadsfiets\");     // NET-1345",
									"//    pm.expect(jsonData.ContentModel.BicycleType.Options[1].Value).to.eql(\"City\");         // NET-1345",
									"    pm.expect(jsonData.ContentModel.BicycleType.Options[1].ToolTip).to.eql(null);",
									"    ",
									"});",
									"",
									"// Check purchase price",
									"pm.test(\"Test: Purchase Price\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ContentModel.PurchasePrice.Label).to.eql(\"Aankoopprijs\");",
									"    pm.expect(jsonData.ContentModel.PurchasePrice.ToolTip).to.eql(\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\");",
									"});",
									"",
									"// Check purchase date",
									"pm.test(\"Test: Purchase Date \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ContentModel.PurchaseDate.Label).to.eql(\"Aankoopdatum fiets\");",
									"    pm.expect(jsonData.ContentModel.PurchaseDate.HelpText).to.eql(\"dd/mm/jjjj\");",
									"});",
									"",
									"// Check product options",
									"pm.test(\"Test: Product Options\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ContentModel.ProductOptions[0].Label).to.eql(\"Fietsbijstand\");",
									"    pm.expect(jsonData.ContentModel.ProductOptions[0].Price).to.eql(\"&euro; 31 per jaar\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"products",
								"{{productIdFv}}",
								"calculatorinit"
							]
						}
					},
					"response": [
						{
							"name": "Electric Bike ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorinit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Length",
									"value": "1774",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 04 May 2018 06:43:10 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "-1",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Set-Cookie",
									"value": "sc_expview=0; path=/",
									"name": "Set-Cookie",
									"description": "an HTTP cookie"
								},
								{
									"key": "X-AspNet-Version",
									"value": "4.0.30319",
									"name": "X-AspNet-Version",
									"description": "Custom header"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "direct1.vab.be",
									"path": "/",
									"secure": false,
									"value": "0",
									"key": "sc_expview"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "direct1.vab.be",
									"path": "/",
									"secure": false,
									"value": "yzanwdleavtoykthrbtisyx5",
									"key": "ASP.NET_SessionId"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "direct1.vab.be",
									"path": "/",
									"secure": false,
									"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
									"key": "SC_ANALYTICS_GLOBAL_COOKIE"
								}
							],
							"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4fc0f661-aeba-479f-b2b2-d5af162ae50f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "def443c4-475e-4036-877b-d5ad6edc6856",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "HomePage: Calculator Update Checks",
			"item": [
				{
					"name": "Electric Bike",
					"item": [
						{
							"name": "Invalid Checks Other",
							"item": [
								{
									"name": "get browsertabid (CUC4)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "534355be-147b-479f-98f2-06bd4cb9e50d",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate Invalid SpartaProductCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e68f7080-0215-4500-8905-4116f4880cd9",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3cb78c75-511b-4b92-9739-3d4e77972ff4",
												"exec": [
													"/*",
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-005\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate Invalid SpartaProductCode2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7245b2e2-6ee9-428d-946b-3d451c923ccd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d44885de-c266-440c-af84-fb2cb5b18b00",
												"exec": [
													"/*",
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"TANK-0012\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Valid Checks Other",
							"item": [
								{
									"name": "get browsertabid (CUC)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0633cf2b-734d-41cf-bc90-36378df8d440",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate with Product Option",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8f806e00-3d1b-4465-b07f-dd6996ed7e19",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "eb2f5b70-8a95-4449-aaf6-a227a6e98b63",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"// Check The Total price without adding a product option",
													"pm.test(\"Test: Total Price Without Product Options\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(223.5);",
													"});",
													"",
													"// Check Purchase Date",
													"pm.test(\"Test: Purchase Date\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
													"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
													"});",
													"",
													"// Check Bicycle Type",
													"pm.test(\"Test: BicycleType\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.BicycleType).to.eql(\"E-Bike\");",
													"});",
													"",
													"// Check Purchase Price",
													"pm.test(\"Test: Purchase Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(10000);",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"5000,00\");",
													"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
													"});",
													"",
													"// Check Product Option disabled",
													"pm.test(\"Test: Product Option disabled\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"1\");",
													"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
													"    ",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate without Product Option",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fe22d9c2-45d7-4645-9db4-1aaf000a532b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ab8a4b3e-b9cf-460f-a529-6a8faa3dff0e",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"// Check The Total price without adding a product option",
													"pm.test(\"Test: Total Price Without Product Options\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(192.5);",
													"});",
													"",
													"// Check Purchase Date",
													"pm.test(\"Test: Purchase Date\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
													"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
													"});",
													"",
													"// Check Bicycle Type",
													"pm.test(\"Test: BicycleType\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.BicycleType).to.eql(\"E-Bike\");",
													"});",
													"",
													"// Check Purchase Price",
													"pm.test(\"Test: Purchase Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(10000);",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"5000,00\");",
													"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
													"});",
													"",
													"// Check Product Option disabled",
													"pm.test(\"Test: Product Option disabled\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"0\");",
													"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
													"    ",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate 25 euro test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e948a449-d3b1-473b-9dbc-acdf5645f1da",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ce4a57ab-f0d7-4400-86ea-94e3bdbe3ac3",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"// Check The Total price without adding a product option",
													"pm.test(\"Test: Total Price Without Product Options\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(25);",
													"});",
													"",
													"// Check Purchase Date",
													"pm.test(\"Test: Purchase Date\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
													"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
													"});",
													"",
													"// Check Bicycle Type",
													"pm.test(\"Test: BicycleType\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.BicycleType).to.eql(\"E-Bike\");",
													"});",
													"",
													"// Check Purchase Price",
													"pm.test(\"Test: Purchase Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(10000);",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"50,00\");",
													"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
													"});",
													"",
													"// Check Product Option disabled",
													"pm.test(\"Test: Product Option disabled\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"0\");",
													"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
													"    ",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 50,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Checks: Date",
							"item": [
								{
									"name": "get browsertabid (CUC2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6d92690-9477-4c7b-bf8e-df7ddaeb773b",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate MinDate after MaxDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c70cf148-0864-4d23-9811-b49eb32f2d08",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6015a47c-998c-4d2a-8dd0-e61122dd3e8b",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"2050-05-05\",\r\n    \"MaxDate\": \"2030-05-05\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate 0000-00-00 MaxDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27ed90ab-53ca-4dc1-b93a-c52fcc77f284",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b3c704c2-487f-4b20-973c-972a7bb83960",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"0000-00-00\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate 9999-12-31 MinDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "53c34df3-37cb-4562-9cba-1a91469cbde8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "41ab8637-e8bd-400d-89e7-1168c60308fa",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"// Check MinDate",
													"pm.test(\"Test: MinDate = 9999-12-31\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.not.eql(\"9999-12-31\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"9999-12-31\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "03525fb7-d354-4b8f-ab4e-19e0fa233096",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7a7edfe5-08d6-4f53-bd6f-543c5caf89bf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Invalid Checks: Price",
							"item": [
								{
									"name": "get browsertabid (CUC3)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8c936f29-76c0-46c8-8a99-5ba872727650",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate Price over Max",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4e3a29da-fc74-4f3d-86a1-5881913396f1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ed714f1a-01eb-46d4-8fd4-b26cb57866d1",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check if the total price = 15000 euro",
													"pm.test(\"Test: Total Price 15000\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"15000,00\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 15000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate Price as 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6c0803a8-b273-4e4c-8d0e-b5fa1282b42b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0e5c43ed-e81f-4576-872c-d6bc36348172",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check if the total price = 0",
													"pm.test(\"Test: Total Price 0\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"0,00\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 0,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate Price as 0 & MinPrice negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3d7aea18-24cb-43b8-8ade-376776b45300",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3787c385-1646-4dd2-9d88-e87d9004ccfc",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check the prices",
													"pm.test(\"Test: Prices\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"0,00\");",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": -1,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 0,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate Text Price",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8db16a22-b70a-45c7-9abd-348264c46f59",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9a374c4a-92c6-433b-82b2-9b439a44caa5",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check Total Price is NULL",
													"pm.test(\"Test: Price null\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(null);",
													"});",
													"",
													"// Check if Purchase Date is okey",
													"pm.test(\"Test: Valid Date\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
													"});",
													"",
													"// Check if Purchase Date is okey",
													"pm.test(\"Test: Invalid purchase price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(false);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": \"WTF is this\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "77b9afc9-578c-4a07-9313-b1214bfefcc3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "101b4d2e-bba8-45f1-a8f4-a39a72f8a8ae",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "City Bike",
					"item": [
						{
							"name": "Invalid Checks Other",
							"item": [
								{
									"name": "get browsertabid (CUC4)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ecff93bb-1daf-4760-b510-7784ba23ac49",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate Invalid SpartaProductCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9e066ef3-8cb9-4e4b-9c65-577a5027f3f8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c43d3ef9-a51c-4f2a-8303-a8d8ce5a45fb",
												"exec": [
													"/*",
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-005\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate Invalid SpartaProductCode2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "17be4807-b49d-48f2-aaa5-10fc8fce923b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3d187318-93a9-4590-9408-6fcac7878721",
												"exec": [
													"/*",
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"TANK-0012\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Valid Checks",
							"item": [
								{
									"name": "get browsertabid (CUC)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63162993-0fb3-455f-8e5d-3b97e78c9f12",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate with Product Option",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3af619aa-b9d4-4ee0-bb3c-07fb8fc11ae3",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"// Check The Total price without adding a product option",
													"pm.test(\"Test: Total Price Without Product Options\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(88.75);",
													"});",
													"",
													"// Check Purchase Date",
													"pm.test(\"Test: Purchase Date\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
													"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
													"});",
													"",
													"// Check Bicycle Type",
													"pm.test(\"Test: BicycleType\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.BicycleType).to.eql(\"Stadsfiets\");",
													"});",
													"",
													"// Check Purchase Price",
													"pm.test(\"Test: Purchase Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(2000); ",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"1500,00\");",
													"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
													"});",
													"",
													"// Check Product Option disabled",
													"pm.test(\"Test: Product Option disabled\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"1\");",
													"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3fa31edb-3535-4bbf-b286-33aeaa2b3d85",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate without Product Option",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5d97c7c6-a0d5-45dd-9188-f070ddc5d2eb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6493c0b7-3fed-4f02-b2e2-333b1f2a9cd1",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"// Check The Total price without adding a product option",
													"pm.test(\"Test: Total Price Without Product Options\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(57.75);",
													"});",
													"",
													"// Check Purchase Date",
													"pm.test(\"Test: Purchase Date\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
													"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
													"});",
													"",
													"// Check Bicycle Type",
													"pm.test(\"Test: BicycleType\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.BicycleType).to.eql(\"Stadsfiets\");",
													"});",
													"",
													"// Check Purchase Price",
													"pm.test(\"Test: Purchase Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(2000);",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"1500,00\");",
													"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
													"});",
													"",
													"// Check Product Option disabled",
													"pm.test(\"Test: Product Option disabled\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"0\");",
													"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
													"    ",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate 25 euro test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "74f30171-b697-473c-b1fe-bc84b0bc3d40",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9fd65d9d-78b3-4a20-a9f5-6e4c9e23d1a2",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"// Check The Total price without adding a product option",
													"pm.test(\"Test: Total Price Without Product Options\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(25);",
													"});",
													"",
													"// Check Purchase Date",
													"pm.test(\"Test: Purchase Date\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
													"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
													"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
													"});",
													"",
													"// Check Bicycle Type",
													"pm.test(\"Test: BicycleType\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.BicycleType).to.eql(\"Stadsfiets\");",
													"});",
													"",
													"// Check Purchase Price",
													"pm.test(\"Test: Purchase Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(2000);",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"50,00\");",
													"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
													"});",
													"",
													"// Check Product Option disabled",
													"pm.test(\"Test: Product Option disabled\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"0\");",
													"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
													"    ",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 50,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Checks: Date",
							"item": [
								{
									"name": "get browsertabid (CUC2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "709fbc09-ef6c-49c4-8632-682bfa3f5d6a",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate MinDate after MaxDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "55df7faf-8d63-4b4e-b58c-38cd21c3093d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ff6a4ac7-b7a3-4d09-b16e-d1a87d38a4b4",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"2050-05-05\",\r\n    \"MaxDate\": \"2030-05-05\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate 9999-12-31 MinDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fe628e5a-7031-4614-98f5-6c679346c8f3",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "da2eab7e-4181-4e06-8aed-9107d500b33c",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"// Check MinDate",
													"pm.test(\"Test: MinDate = 9999-12-31\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.not.eql(\"9999-12-31\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"9999-12-31\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate 0000-00-00 MaxDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1f8ac9ea-f315-4969-b7f0-3e474141e21b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "cd2d359a-dd38-48e4-b112-31c056ce7047",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"0000-00-00\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "37687b62-1447-4672-b08b-68a4d424d6c1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "acd7f607-237d-4d81-a197-fcf6db68036a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Invalid Checks: Price",
							"item": [
								{
									"name": "get browsertabid (CUC3)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "113adfc0-f9cc-4961-aec1-aa96bb791515",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate Price over Max",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "675205dc-8f86-43ae-8581-8431be3044af",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "44fd02fd-ad18-4bd6-bca7-d77d0c00d64d",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check if the total price = 15000 euro",
													"pm.test(\"Test: Total Price 15000\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"15000,00\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 15000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate Price as 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7aaf417e-9541-4d51-bcf4-89aa2e90c561",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "63c6578d-9a78-44b7-a7fa-f15528dc4982",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check if the total price = 0",
													"pm.test(\"Test: Total Price 0\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"0,00\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 0,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate Price as 0 & MinPrice negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ad818fd2-744f-4e7f-8f89-66192f960201",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "446af564-6579-42ee-9dca-f6dcf1debfe3",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check the prices",
													"pm.test(\"Test: Prices\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"0,00\");",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": -1,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 0,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Calculatorupdate Text Price",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8764400d-16b4-43a8-ab6b-449516f3f54f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5c62bdda-354e-4079-8a47-2f0171104ed1",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check Total Price is NULL",
													"pm.test(\"Test: Price null\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(null);",
													"});",
													"",
													"// Check if Purchase Date is okey",
													"pm.test(\"Test: Valid Date\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
													"});",
													"",
													"// Check if Purchase Date is okey",
													"pm.test(\"Test: Invalid purchase price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(false);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": \"WTF is this\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5be60bef-768e-4308-8e6f-3c0f7abf0619",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b9f448c4-ede5-4e77-965c-b0b1fe53e86c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b0c5d200-8e69-441c-8041-ffd8d02499e3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4d497840-1e24-482a-b7e9-49a4f9166881",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "HomePage: Calculations of prices",
			"item": [
				{
					"name": "Electric Bikes",
					"item": [
						{
							"name": "Calculations 1",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7761ff0a-2a01-41f5-9ad7-aff70f19069b",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a486a855-c58b-4466-a5d6-7a50c569aefe",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "eb961139-97b0-41b0-8013-476eef160b8a",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d844f5e6-c19b-4709-a1e5-edec5fba6162",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(192.5);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ee056824-967f-4dae-a392-5ff40650775c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96943162-6298-456f-a3d9-5cc6f62d9ebf",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 2",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b2dd54ba-c1f1-449e-b315-73030b8fe63f",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "797a80d5-2350-458c-a2b9-63bbca220a45",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b056698b-051b-452b-9031-5f8f3873be9d",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c49fdfbe-6a3d-4000-b9b6-7d4d38cf7976",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(223.5);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(1);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ba09a4c9-60ae-4183-9363-5c1bedc2e1e0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "10cc0ae6-04b3-444f-9fc5-1cb2dbcb88d5",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 3",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9ebb63a-7a56-4c49-96d1-f7e2548c5c1d",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5044b16a-500c-4550-b5bf-fe67193c3a8d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "188eb8da-8f2d-4321-9cf7-976997c5f0bc",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 10000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "683c88d4-5e5f-4688-8801-941a672369e6",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price (most expansive)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(415.99); // KP-73 tijdelijke aanpassing in afwachting van nauwkeurigere prijs door KLA",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(1);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "deba89db-3ad1-4a57-88e7-c0d86ead5549",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "926688bb-c258-4150-b193-a2b84dfe2b6b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 4",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c996c2aa-4feb-4ca3-9168-a65bc7e3f7ac",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "97f0699f-bd05-4f29-a1c5-2d4d4387d2a5",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8dc13bf1-cdcc-4b3b-8168-0a6150edd1d8",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 10,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "523168c0-5b6e-4fa0-b33d-21a3d9603b1c",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price (cheapest)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(25);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dfb0a60e-e9c6-4b36-a5cb-24eb8df1a2b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "20a9cc84-8959-437d-91fc-fbd982946d2a",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 5",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e6c91288-ab04-4092-a47f-cc3682b1d0af",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7ab931b3-3382-4a4b-98fa-d65ec3e7a5e8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2bc91f14-7260-4c83-9ae2-6da7e0e0e465",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 649,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73d3d636-1e45-4316-9c22-da32872476f3",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price (boundry 649)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(25);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a710f5dc-eed7-46c3-a4ef-8fbeb2b0f99f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "67975a62-1af6-4b5f-8cd9-e1e628af2ff9",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 6",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "975d3d23-da5c-4862-ace1-05397872cd8e",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ba7cb755-abe6-45cb-b67a-14f1e8ba0932",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1b0182ac-1501-4e98-95a1-a6b0bf14d289",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 650,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e2429639-dc62-46d2-b634-dae705bc5931",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price (boundry 650)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(25.02);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "724f53b0-90a8-4d5f-a6e2-084a522e9983",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4efae7a4-ed85-4e6c-bbb4-480f9271f444",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "City Bikes",
					"item": [
						{
							"name": "Calculations 1",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "23bf7d0c-6848-4a0b-a338-dc14db3c38c9",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59dc930c-7cf7-4354-9536-749d86278a11",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "504bccb4-f396-45ff-8928-07bc31c64a29",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5f3fd0e-ef56-454e-ab8f-152efaef02d0",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(38.5);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a042c853-6b19-443c-aee5-65c9258c254d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8de83714-4bc7-42a5-bf77-3711ce6ec0a0",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 2",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ef64be8-902b-4a2d-948b-0b0c6a93cfef",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72a4b513-18c3-4fe9-b401-80ac836a61da",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2d23502c-d239-494a-b1de-e5e8766c4218",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "55750ac0-4a32-4819-9444-6a999a5731a6",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(69.5);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(1);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5ac33df9-c418-4bfe-9b6f-70457b4578e9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dc9283a3-229d-4f37-a537-344087a724f4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 3",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "62b50924-e75d-434c-9881-e9f2a1f64b67",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "68ee4bc4-e2fe-4b0c-af6b-d8fe205baa81",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d4ba6538-b233-49e0-a48b-cde2e314f6d6",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 2000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "56b4e02c-9a8e-4251-a641-6d5d0b4dd8af",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price (most expansive)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(108);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(1);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7bed0fe1-046c-45d8-8a62-1ac6987696f6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bd6d1560-0984-4348-95aa-e8a443a0acea",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 4",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44bdb59e-56dd-4421-8f48-7efda84587a3",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a0568b4e-b94c-4a87-bc4c-f05862ca3e22",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2cc4e258-a118-4e1a-b22a-2c3e23e2651d",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 10,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d0433348-5d5e-498d-94c6-817f4ff6a7d3",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price (cheapest)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(25);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "816fa97b-b5b1-4e7a-a4c5-31b29015ccbb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "eb2f890e-0eec-438c-b8ac-de6d6946c578",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 5",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5715de96-af4b-4950-8084-67e5bca31639",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0366381-2222-40bc-be4e-15343b7b8bea",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3eb3d8e6-505b-4088-9769-a10dc06da7a7",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 649,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9e1f75a3-eed3-4704-8e10-29927f7283d9",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price (boundry 649)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(25);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a1abc22c-8078-4316-87bb-d5500dcc515f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5d6d3ccf-8626-4159-b47b-1b9073256cec",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calculations 6",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5ac6e87-06a1-47ba-b016-c8da3535546f",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "375874c6-f91f-42d4-8d51-c5a7428d8c4d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bd14dc43-624b-45cc-be3d-b1fe7c583cbe",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 650,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bd59e83-5861-4534-b867-5b735f95f72b",
												"type": "text/javascript",
												"exec": [
													"// Check if the response code is 200",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Check the total price",
													"pm.test(\"Test: Total Price (boundry 650)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.TotalPrice).to.eql(25.02);",
													"});",
													"",
													"// Check if Bijstand is tagged ",
													"pm.test(\"Test: Bijstand\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Options.Options[0].Count).to.eql(0);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2e0f2d05-941f-4544-8f4d-f4cd52a3f2a4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "110caa8d-9d4e-4e6d-b831-44e322f2a443",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "63e085fa-e191-4792-a765-9a3b1d86cc5e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6c57b093-65d9-47f1-a215-985526f78d09",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3d948850-4734-43fb-8a40-546a31268452",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8e1559f5-3cfd-4d89-a5f6-fa9dcd7423e3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Step 1: Update Checks",
			"item": [
				{
					"name": "Electric",
					"item": [
						{
							"name": "Invalid Checks: Price",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26b0da1a-6c14-491d-a009-02b964bb851d",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c9536787-14a7-4de8-b7f4-a9f2b8f4c4f1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Price update: Price over Max",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f370430c-7e8f-4589-9f10-6a7482ca9b12",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 10001,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Price update: Price with Text",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d64df5d-799c-41e8-905d-48cfbc1b7b3f",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": \"this isn't legit?\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Price update: Price with 0 Price",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b42efe4b-4bb1-4fd5-95cd-3b57682b66ac",
												"exec": [
													"// Check if the form is Invalid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 0,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Price update: Price with 0 Price With MinPrice Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7acf0c09-a39b-44bd-a186-28ffc9a8dd98",
												"exec": [
													"/*",
													"// Check if the form is Invalid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check the prices",
													"pm.test(\"Test: Prices\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(0);",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"});",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": -1,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 0,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "19500bc0-1dcb-40ce-b548-73e259dffa5c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ab3d6601-8b47-4608-bdd7-0daf2c17c7f4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Checks: Date",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "281ec656-ed7a-44fe-9424-4d7c927ce285",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b7b45a84-8243-4f49-8f31-e0af70cf3b49",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d911e7b7-b2a2-4da9-8add-9a204cdfa74e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6ca10852-70c0-4626-bd5c-e2d5a56bee5d",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MinDate after MaxDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "97b772b8-1706-4712-8a76-3c3cbd936782",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"pm.test(\"Test: MinDate changed\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.not.eql(\"2030-05-18\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"18/05/2030\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MaxDate 0000-00-00",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6bd43349-63b7-4355-afb9-9bd0a6aa565f",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"pm.test(\"Test: MinDate 0000-00-00\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.MaxDate).to.not.eql(\"0000-00-00\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"0000-00-00\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "TextDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6e4920d-0f23-43b5-b650-259d65fd22ad",
												"exec": [
													"/*",
													"// Check if the form is Valid",
													"pm.test(\"Test: valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"what is this?\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7645a845-bc57-4ad2-ba8f-df0cc69cfacc",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ed355b39-7ce2-4f21-a788-e5c9dca45292",
										"type": "text/javascript",
										"exec": [
											"/*",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"*/"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Checks: Other",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "10d00f38-2903-4c2c-a8ad-700a7669dff9",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0f192fe0-cd44-4f9e-b942-fc93f8414cc4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Empty Framenummer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f0ab766a-846a-4f66-af58-dbc49e290b9c",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"pm.test(\"Test: Empty framenr\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.FrameNumber.Text).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Text Framenummer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7e5fb557-5991-4938-94fa-3ff711245c41",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"pm.test(\"Test: Text framenummer\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.FrameNumber.Text).to.eql(\"LaLa\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"LaLa\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "239afb68-c096-45d0-8f5a-d5ff9da7db1d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "eea470fd-c59c-45de-a873-bd893220a474",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Valid Flow",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "886643ce-be25-4958-9e77-150513388bff",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "76a58e6d-eac1-4328-8507-d2889efec24e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Text Framenummer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cdeb5ed5-f17f-464f-8783-805dbd7018c6",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"pm.test(\"Test: Framenummer\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.FrameNumber.Text).to.eql(\"78976574\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"78976574\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Frame Number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0ff44745-e5dc-4fef-9d35-ab6d8ae1c2c7",
												"exec": [
													"pm.test(\"Test: Framenummer\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.UpdateModel.FrameNumber.Text).to.eql(\"78976574\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}\n"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "44877c87-ea24-40bc-866f-53e56b53a6af",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6737a101-c28d-41d4-8c4c-c97027d58e24",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "City",
					"item": [
						{
							"name": "Invalid Checks: Price",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "40df26ef-2da2-4fcb-b83b-e99af2757a64",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7b3ce533-8ef5-4a57-a324-268e29b0bf47",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Price update: Price over Max",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f0c90d7-4bf2-44e7-813e-ce1410b80fcd",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 2001,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Price update: Price with Text",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b419af0-6b0d-481f-9d4c-d9f3b8500e27",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": \"this isn't legit?\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Price update: Price with 0 Price",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aef6f850-4166-48f8-80f8-98240053d423",
												"exec": [
													"// Check if the form is Invalid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 0,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Price update: Price with 0 Price With MinPrice Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "07fbf074-31f0-4db5-acb0-c22830ce1066",
												"exec": [
													"/*",
													"// Check if the form is Invalid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"// Check the prices",
													"pm.test(\"Test: Prices\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchasePrice.Price).to.eql(0);",
													"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
													"});",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": -1,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 0,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "101e029d-cbb7-47e5-bf24-7b21530bee30",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d35d985f-8ad5-4823-ae6a-777918f78fc4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Checks: Date",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa02b642-9ac7-4d1b-9c33-7f858ee6227f",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f80ef722-189f-4ddd-be57-e378ccf13405",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "61208c38-78f3-4b06-95b7-45127c5cbcb6",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "89de7eda-0061-4732-92fa-ab27aae5fada",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MinDate after MaxDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "246c005a-1633-44cd-a5f2-02be0bc62c3c",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"pm.test(\"Test: MinDate changed\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.MinDate).to.not.eql(\"2030-05-18\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"18/05/2030\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MaxDate 0000-00-00",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aab0df68-f0ea-41ca-aa74-29e0e9cd798c",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"pm.test(\"Test: MinDate 0000-00-00\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.PurchaseDate.MaxDate).to.not.eql(\"0000-00-00\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"0000-00-00\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "TextDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a304e298-1a91-44ce-a3c4-44a67e501e49",
												"exec": [
													"/*",
													"// Check if the form is Valid",
													"pm.test(\"Test: valid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"wtf is this\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "eb96a7bd-7d38-4357-ab9f-185dd5acbc30",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7f839898-f711-4934-94f7-4d109f3684ae",
										"type": "text/javascript",
										"exec": [
											"/*pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});*/"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Checks: Other",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1eda6332-c7ed-44d2-8966-cbcd9d0a7f99",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "77a45448-70f1-49bd-a142-fdf2619546a1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Empty Framenummer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b53d296b-2224-4539-9c82-90a8af702391",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"",
													"pm.test(\"Test: Empty Framenr\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.FrameNumber.Text).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Text Framenummer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d6db96bf-3cd0-496b-918a-81797cccb2a5",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"pm.test(\"Test: Text Framenr\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.FrameNumber.Text).to.eql(\"LaLa\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"LaLa\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ded06b4c-5370-474e-a694-8e0e3e35c19d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c9151cce-219f-417e-aa7f-49bcfe074c12",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Valid Flow ",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "88b6baf2-783c-4458-a056-18ecf9a4a9ad",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5a5b6795-9bc6-45fc-921b-d5a1d06f3715",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Text Framenummer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3e9d7865-7abd-4d5e-b482-ef500845f7d5",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(true);",
													"});",
													"",
													"pm.test(\"Test: Framenummer\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.FrameNumber.Text).to.eql(\"78976574\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"78976574\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"Stadsfiets\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 2000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Frame Number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "23a91214-3b77-4692-b6ba-1f463482cde1",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Test: Framenummer\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.UpdateModel.FrameNumber.Text).to.eql(\"78976574\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}\n"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "074c69f8-3a19-4f71-8832-c974460b06d9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e87f31f9-56c9-48f4-8c9c-5547f835d3e2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c12c996b-449d-4827-9246-116c5370fd25",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0209aaf2-d005-48d4-9e21-4bee0fd5c47c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Contract Updates",
					"item": [
						{
							"name": "Contract Updates: StartDates",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f8f111e-d42b-4cd4-abb8-252fa518a5fc",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "26712604-a698-4c2a-9ad9-3466dc6759c7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Jouw VAB Fietsverzekering",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Frame Number",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}\n"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Date: 0000-00-00",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de8a4630-6adb-4985-bde2-8291b37fc742",
												"type": "text/javascript",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"calculator\",\r\n    \"Url\": \"api/funnel/components/calculator/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"StartDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"0000-00-00\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"EndDate\": {\r\n    \"MinDate\": null,\r\n    \"MaxDate\": null,\r\n    \"Date\": \"2019-05-09\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"contract",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Date: MaxDate before MinDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6a400250-caa1-40eb-9216-a2c3f425d31f",
												"type": "text/javascript",
												"exec": [
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"calculator\",\r\n    \"Url\": \"api/funnel/components/calculator/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"StartDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"1800-05-05\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"EndDate\": {\r\n    \"MinDate\": null,\r\n    \"MaxDate\": null,\r\n    \"Date\": \"2019-05-09\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"contract",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "TextDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba1da32e-4382-4ed6-8b1f-3489aebb1575",
												"type": "text/javascript",
												"exec": [
													"/*",
													"// Check if the form is Valid",
													"pm.test(\"Test: Invalid Form\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.Valid).to.eql(false);",
													"});",
													"*/"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"calculator\",\r\n    \"Url\": \"api/funnel/components/calculator/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"StartDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"Is this Magic?\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"EndDate\": {\r\n    \"MinDate\": null,\r\n    \"MaxDate\": null,\r\n    \"Date\": \"2019-05-09\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"contract",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "78cfddfe-a34c-4c89-b157-56aba22e8227",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1bd62e0f-4b8d-4e3c-b3bc-eacdbc1cc8a4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Contract Updates: Valid Flow",
							"item": [
								{
									"name": "get browsertabid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "71719178-b454-4781-9f49-29a9c827f8d8",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
													"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
													"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"response": [
										{
											"name": "Electric Bike ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"{{productIdFv}}",
														"calculatorinit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Content-Length",
													"value": "1774",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 04 May 2018 06:43:10 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Expires",
													"value": "-1",
													"name": "Expires",
													"description": "Gives the date/time after which the response is considered stale"
												},
												{
													"key": "Pragma",
													"value": "no-cache",
													"name": "Pragma",
													"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/8.5",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "Set-Cookie",
													"value": "sc_expview=0; path=/",
													"name": "Set-Cookie",
													"description": "an HTTP cookie"
												},
												{
													"key": "X-AspNet-Version",
													"value": "4.0.30319",
													"name": "X-AspNet-Version",
													"description": "Custom header"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET",
													"name": "X-Powered-By",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"httpOnly": false,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "0",
													"key": "sc_expview"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "yzanwdleavtoykthrbtisyx5",
													"key": "ASP.NET_SessionId"
												},
												{
													"expires": "Invalid Date",
													"httpOnly": true,
													"domain": "direct1.vab.be",
													"path": "/",
													"secure": false,
													"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
													"key": "SC_ANALYTICS_GLOBAL_COOKIE"
												}
											],
											"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
										}
									]
								},
								{
									"name": "Calculatorupdate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "78120bab-2578-448a-ae9a-7347781a4cf9",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorupdate"
											]
										},
										"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
									},
									"response": []
								},
								{
									"name": "Get Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Jouw VAB Fietsverzekering",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Frame Number",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"bicycle",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}\n"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update contract dates",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Valid\": true,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"calculator\",\r\n    \"Url\": \"api/funnel/components/calculator/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"StartDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"EndDate\": {\r\n    \"MinDate\": null,\r\n    \"MaxDate\": null,\r\n    \"Date\": \"2019-05-09\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"contract",
												"update"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get contract details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"api",
												"funnel",
												"components",
												"calculator",
												"init"
											],
											"query": [
												{
													"key": "browserTabId",
													"value": "{{browserTabId}}"
												},
												{
													"key": "productId",
													"value": "{{productIdFv}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "85bc1f25-c79d-449b-b5bf-c7e6c4f55240",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7a8e4a81-bc3f-40f7-9aad-623da1feaf7b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9fed1a51-b46f-4d4e-a26a-8acf5ed5dee1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e090f84f-4360-4e5d-8243-ad8f9416fcf1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Step 2: Gegevens",
			"item": [
				{
					"name": "Required Fields",
					"item": [
						{
							"name": "get browsertabid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6500d4e2-c7a0-4c9a-8f97-a34b89c80967",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
											"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
											"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorinit"
									]
								}
							},
							"response": [
								{
									"name": "Electric Bike ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-Length",
											"value": "1774",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 04 May 2018 06:43:10 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "-1",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Set-Cookie",
											"value": "sc_expview=0; path=/",
											"name": "Set-Cookie",
											"description": "an HTTP cookie"
										},
										{
											"key": "X-AspNet-Version",
											"value": "4.0.30319",
											"name": "X-AspNet-Version",
											"description": "Custom header"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": false,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "0",
											"key": "sc_expview"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "yzanwdleavtoykthrbtisyx5",
											"key": "ASP.NET_SessionId"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
											"key": "SC_ANALYTICS_GLOBAL_COOKIE"
										}
									],
									"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
								}
							]
						},
						{
							"name": "Calculatorupdate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "667f7703-89f2-419f-abd5-5dcf2d7b4264",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Get Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Jouw VAB Fietsverzekering",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Frame Number",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update contract dates",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"calculator\",\r\n    \"Url\": \"api/funnel/components/calculator/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"StartDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"EndDate\": {\r\n    \"MinDate\": null,\r\n    \"MaxDate\": null,\r\n    \"Date\": \"2019-05-09\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"contract",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contract details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0bf62bc-453b-4312-b742-a9d1d29944c2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "90e8321e-c63d-46d5-9cd2-962abbf488a1",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Birthdate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "930b55b1-3af0-4258-b162-7f2d2382b73f",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No E-mail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5867985f-6af8-47e3-8f49-bc968675a0aa",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Postalcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a647c830-7d4a-47c5-88b4-979b59b40eda",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No City",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f16ed8e4-ecfa-479a-a7b5-96c4832becf2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Street",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "243f7049-de14-47ea-aa2a-e9921d81ac37",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No HouseNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5930ad70-c274-4864-8e04-2c95414a20fb",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b887b227-5b5a-4be4-b845-ad3e38f3a371",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Terms",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37f431ee-28e6-46eb-b73a-c4f0c78b5516",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "49342324-edf4-44f7-b38f-fa85d43fca7a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5226ea12-69bc-433b-9802-bb2eeaba3f8f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Date errors",
					"item": [
						{
							"name": "get browsertabid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e10525b-df32-4f15-9138-aaa982d1b11d",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
											"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
											"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorinit"
									]
								}
							},
							"response": [
								{
									"name": "Electric Bike ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-Length",
											"value": "1774",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 04 May 2018 06:43:10 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "-1",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Set-Cookie",
											"value": "sc_expview=0; path=/",
											"name": "Set-Cookie",
											"description": "an HTTP cookie"
										},
										{
											"key": "X-AspNet-Version",
											"value": "4.0.30319",
											"name": "X-AspNet-Version",
											"description": "Custom header"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": false,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "0",
											"key": "sc_expview"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "yzanwdleavtoykthrbtisyx5",
											"key": "ASP.NET_SessionId"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
											"key": "SC_ANALYTICS_GLOBAL_COOKIE"
										}
									],
									"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
								}
							]
						},
						{
							"name": "Calculatorupdate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4912a32a-7ca5-48b8-969c-30a9cf6ab680",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Get Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Jouw VAB Fietsverzekering",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Frame Number",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update contract dates",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"calculator\",\r\n    \"Url\": \"api/funnel/components/calculator/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"StartDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"EndDate\": {\r\n    \"MinDate\": null,\r\n    \"MaxDate\": null,\r\n    \"Date\": \"2019-05-09\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"contract",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contract details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Birthdate In Future",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "746d5434-36f7-49f1-bb94-97912a9f37c1",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"2099-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Birthdate In Far Past",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c9c4a07-acc0-436c-b799-d91453d2251a",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1800-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Birthdate In Text",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eebdea3e-9c65-461d-8f60-7493f2cbf322",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"What\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MinDate Higher then MaxDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e570d4bd-acdb-4eb0-a99e-571b2e2d6773",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: valid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"2099-08-13\",\r\n      \"MaxDate\": \"{{maxDate}}\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MaxDate as Text",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13904d9f-53b2-4f9e-8f2b-f9f4bbcd3ea2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: valid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"{{minDate}}\",\r\n      \"MaxDate\": \"lol\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d3d9a66f-2787-49b1-83d4-a65de728c878",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4ab517d5-1dc9-47d0-8899-7fc533b7c9e9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Step 3: Behoefteanalyse",
			"item": [
				{
					"name": "Updates",
					"item": [
						{
							"name": "get browsertabid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe9b2f66-a93f-41fc-bd74-d226d738585a",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
											"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
											"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorinit"
									]
								}
							},
							"response": [
								{
									"name": "Electric Bike ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-Length",
											"value": "1774",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 04 May 2018 06:43:10 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "-1",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Set-Cookie",
											"value": "sc_expview=0; path=/",
											"name": "Set-Cookie",
											"description": "an HTTP cookie"
										},
										{
											"key": "X-AspNet-Version",
											"value": "4.0.30319",
											"name": "X-AspNet-Version",
											"description": "Custom header"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": false,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "0",
											"key": "sc_expview"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "yzanwdleavtoykthrbtisyx5",
											"key": "ASP.NET_SessionId"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
											"key": "SC_ANALYTICS_GLOBAL_COOKIE"
										}
									],
									"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
								}
							]
						},
						{
							"name": "Calculatorupdate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3c3a5f4a-2b53-4bf7-86db-7568c1a9407f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Get Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Jouw VAB Fietsverzekering",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Frame Number",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update contract dates",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"calculator\",\r\n    \"Url\": \"api/funnel/components/calculator/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"StartDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"EndDate\": {\r\n    \"MinDate\": null,\r\n    \"MaxDate\": null,\r\n    \"Date\": \"2019-05-09\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"contract",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contract details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Gegevens",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"1868-05-07\",\r\n      \"MaxDate\": \"2006-05-07\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Behoefteanalyse",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "90f74309-5f81-4cd9-991a-358dd5806bc6",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"jsonData.UpdateModel.Questions[0].SelectedValue = \"0\"; // + Math.round(Math.random());",
											"jsonData.UpdateModel.Questions[0].Options[0].Value = \"\";",
											"jsonData.UpdateModel.Questions[1].Options[0].Value = \"\";",
											"postman.setEnvironmentVariable(\"analysisJson\",JSON.stringify(jsonData.UpdateModel));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "required option 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "429f5508-ab83-49c5-9aae-e89cedf3c1d3",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"jsonData.Questions[1].SelectedValue = \"1\"; // + Math.round(Math.random());",
											"console.log('selectedValue', jsonData.Questions[1].SelectedValue);",
											"postman.setEnvironmentVariable(\"analysisJsonTwo\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "174c5b42-79b0-4e94-a834-5add3e6a0063",
										"exec": [
											"console.log('analysisJson', pm.environment.get(\"analysisJson\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{analysisJson}}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "required option 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6787c772-f652-421b-b913-15d6e453c785",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(true);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf84d92b-18e7-453b-beb9-43d83fbebf10",
										"exec": [
											"console.log('analysisJson2', pm.environment.get(\"analysisJsonTwo\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{analysisJsonTwo}}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Good request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eaa58460-d339-4a45-aacf-be0b54123dc8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: valid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"Questions\": [\r\n    {\r\n      \"NecessityAnalysisQuestions\": \"ProtectBicycleAgainstTheft\",\r\n      \"Options\": [\r\n        {\r\n          \"Label\": null,\r\n          \"Value\": \"\",\r\n          \"ToolTip\": null\r\n        }\r\n      ],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"0\"\r\n    },\r\n    {\r\n      \"NecessityAnalysisQuestions\": \"BicycleBreakdown\",\r\n      \"Options\": [\r\n        {\r\n          \"Label\": null,\r\n          \"Value\": \"\",\r\n          \"ToolTip\": null\r\n        }\r\n      ],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"0\"\r\n      }\r\n  ],\r\n  \"ResponseText\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "no browserid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60cf328a-51c9-4ebb-a904-d58d65d6dfa8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"\",\r\n  \"Questions\": [\r\n    {\r\n      \"NecessityAnalysisQuestions\": \"ProtectBicycleAgainstTheft\",\r\n      \"Options\": [\r\n        {\r\n          \"Label\": null,\r\n          \"Value\": \"\",\r\n          \"ToolTip\": null\r\n        }\r\n      ],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"0\"\r\n    },\r\n    {\r\n      \"NecessityAnalysisQuestions\": \"BicycleBreakdown\",\r\n      \"Options\": [\r\n        {\r\n          \"Label\": null,\r\n          \"Value\": \"\",\r\n          \"ToolTip\": null\r\n        }\r\n      ],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"0\"\r\n    }\r\n  ],\r\n  \"ResponseText\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4bf384d3-66d7-4044-85a7-fa7a3bdd41fc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b18eb820-3dd6-4d42-a193-8bac270af172",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Step 4: Betaling",
			"item": [
				{
					"name": "End to End Copy",
					"item": [
						{
							"name": "get browsertabid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02aecafa-db01-43bf-99a5-bdd1eb0a0cfc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
											"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
											"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorinit"
									]
								}
							},
							"response": [
								{
									"name": "Electric Bike ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-Length",
											"value": "1774",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 04 May 2018 06:43:10 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "-1",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Set-Cookie",
											"value": "sc_expview=0; path=/",
											"name": "Set-Cookie",
											"description": "an HTTP cookie"
										},
										{
											"key": "X-AspNet-Version",
											"value": "4.0.30319",
											"name": "X-AspNet-Version",
											"description": "Custom header"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": false,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "0",
											"key": "sc_expview"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "yzanwdleavtoykthrbtisyx5",
											"key": "ASP.NET_SessionId"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
											"key": "SC_ANALYTICS_GLOBAL_COOKIE"
										}
									],
									"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
								}
							]
						},
						{
							"name": "Calculatorupdate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "54b71527-8598-4dd1-b5df-fc13f919746b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Get Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Jouw VAB Fietsverzekering",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Frame Number",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update contract dates",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"calculator\",\r\n    \"Url\": \"api/funnel/components/calculator/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"StartDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"EndDate\": {\r\n    \"MinDate\": null,\r\n    \"MaxDate\": null,\r\n    \"Date\": \"2019-05-09\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"contract",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contract details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Gegevens",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"Person\": {\r\n    \"Salutation\": {\r\n      \"Options\": [{\r\n        \"Label\": \"De heer\",\r\n        \"Value\": \"Dhr.\",\r\n        \"ToolTip\": null\r\n      }, {\r\n        \"Label\": \"Mevrouw\",\r\n        \"Value\": \"Mevr.\",\r\n        \"ToolTip\": null\r\n      }],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"Dhr.\"\r\n    },\r\n    \"Firstname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Bob\"\r\n    },\r\n    \"Lastname\": {\r\n      \"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"De Bouwer\"\r\n    },\r\n    \"BirthDate\": {\r\n      \"MinDate\": \"1868-05-07\",\r\n      \"MaxDate\": \"2006-05-07\",\r\n      \"Date\": \"1991-08-13\",\r\n      \"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"ContactInfo\": {\r\n    \"Email\": {\r\n      \"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"kvk@vab.be\"\r\n    },\r\n    \"Phone\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    }\r\n  },\r\n  \"Address\": {\r\n    \"PostalCode\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"3201\"\r\n    },\r\n    \"City\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Langdorp\"\r\n    },\r\n    \"Street\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"Blakerstraat\"\r\n    },\r\n    \"Number\": {\r\n      \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Required\": true,\r\n      \"Valid\": false,\r\n      \"Text\": \"99\"\r\n    },\r\n    \"MailBox\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"\",\r\n      \"Required\": false,\r\n      \"Valid\": true,\r\n      \"Text\": \"\"\r\n    },\r\n    \"Countries\": {\r\n      \"Required\": true,\r\n      \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n      \"Valid\": true,\r\n      \"ValidationMessage\": null,\r\n      \"SelectedValue\": \"B\"\r\n    }\r\n  },\r\n  \"Terms\": {\r\n    \"TermsAndConditions\": {\r\n      \"Checked\": true,\r\n      \"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n      \"Required\": true,\r\n      \"Valid\": true\r\n    }\r\n  },\r\n  \"Domiciliation\": {\r\n    \"SpartaProductCode\": null,\r\n    \"UpdateFunnelComponentsActions\": [{\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }, {\r\n      \"Name\": \"contract\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }],\r\n    \"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"RenewWithDomiciliation\": {\r\n      \"Checked\": false,\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": null,\r\n      \"Required\": false,\r\n      \"Valid\": true\r\n    },\r\n    \"Iban\": {\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"Text\": null\r\n    }\r\n  },\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Behoefteanalyse",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Behoefteanalyse",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"Questions\": [\r\n    {\r\n      \"NecessityAnalysisQuestions\": \"ProtectBicycleAgainstTheft\",\r\n      \"Options\": [\r\n        {\r\n          \"Label\": null,\r\n          \"Value\": \"\",\r\n          \"ToolTip\": null\r\n        }\r\n      ],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"0\"\r\n    },\r\n    {\r\n      \"NecessityAnalysisQuestions\": \"BicycleBreakdown\",\r\n      \"Options\": [\r\n        {\r\n          \"Label\": null,\r\n          \"Value\": \"\",\r\n          \"ToolTip\": null\r\n        }\r\n      ],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"0\"\r\n    }\r\n  ],\r\n  \"ResponseText\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contentmodel",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/payment/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"payment",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Actiecode: null",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa6a9141-c8ac-4347-b4f8-afba62bbf243",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: DiscountCode: null\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DiscountCode.Text).to.eql(null);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DiscountCode\": {\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true,\r\n    \"Text\": null\r\n  },\r\n  \"ValidateButton\": {},\r\n  \"UpdateFunnelComponentsActions\": [\r\n    {\r\n      \"Name\": \"calculator\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    },\r\n    {\r\n      \"Name\": \"calculator\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }\r\n  ],\r\n  \"SpartaProductCode\": null,\r\n  \"ShowDomiciliationNoCumulMessageAndButtons\": false,\r\n  \"BrowserTabId\": \"757f4e78-f4ec-497f-8678-e10f19ddd326\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/discount/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"discount",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Actiecode: XXX",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3795c1c-82cc-4114-9398-5f44f1f1e4e2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test: DiscountCode:XXX\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DiscountCode.Text).to.eql(\"XXX\");",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DiscountCode\": {\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true,\r\n    \"Text\": \"XXX\"\r\n  },\r\n  \"ValidateButton\": {},\r\n  \"UpdateFunnelComponentsActions\": [\r\n    {\r\n      \"Name\": \"calculator\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    },\r\n    {\r\n      \"Name\": \"calculator\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }\r\n  ],\r\n  \"SpartaProductCode\": null,\r\n  \"ShowDomiciliationNoCumulMessageAndButtons\": false,\r\n  \"BrowserTabId\": \"757f4e78-f4ec-497f-8678-e10f19ddd326\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/discount/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"discount",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6fccde1d-c9d3-419e-9cf4-512db9b1ad08",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ed01913d-a31c-45cf-89e7-aa5b40cbc987",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End to End Sample",
			"item": [
				{
					"name": "End to End",
					"item": [
						{
							"name": "get browsertabid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "291f2550-8956-4fe5-9e0d-3c5673fdb769",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"browserTabId\",jsonData.UpdateModel.BrowserTabId);",
											"postman.setEnvironmentVariable(\"minDate\",jsonData.UpdateModel.PurchaseDate.MinDate);",
											"postman.setEnvironmentVariable(\"maxDate\",jsonData.UpdateModel.PurchaseDate.MaxDate);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorinit",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorinit"
									]
								}
							},
							"response": [
								{
									"name": "Electric Bike ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/{{productIdFv}}/calculatorinit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												"{{productIdFv}}",
												"calculatorinit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-Length",
											"value": "1774",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 04 May 2018 06:43:10 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "-1",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Set-Cookie",
											"value": "sc_expview=0; path=/",
											"name": "Set-Cookie",
											"description": "an HTTP cookie"
										},
										{
											"key": "X-AspNet-Version",
											"value": "4.0.30319",
											"name": "X-AspNet-Version",
											"description": "Custom header"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"httpOnly": false,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "0",
											"key": "sc_expview"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "yzanwdleavtoykthrbtisyx5",
											"key": "ASP.NET_SessionId"
										},
										{
											"expires": "Invalid Date",
											"httpOnly": true,
											"domain": "direct1.vab.be",
											"path": "/",
											"secure": false,
											"value": "cb57ad13ee144bf892b9da5718ce6f2f|False",
											"key": "SC_ANALYTICS_GLOBAL_COOKIE"
										}
									],
									"body": "{\"ContentModel\":{\"ProductsTitlesOptions\":\"Opties\",\"HeaderItems\":[{\"ProductType\":\"Single\",\"MinimumPrice\":\"&euro; 25\",\"Label\":\"vanaf\"}],\"PurchaseDate\":{\"Type\":\"DateInput\",\"Label\":\"Aankoopdatum fiets\",\"WidthPercentage\":100,\"HelpText\":\"dd/mm/jjjj\",\"ToolTip\":\"De aankoopprijs is gelijk aan de factuurprijs, inclusief de waarde van alle opties die je niet kan verwijderen zonder hulpstukken. Voor een stadsfiets is de maximumprijs 2.000 euro. Voor een elektrische fiets is de maximumprijs 10.000 euro. De minimumpremie is 25 euro per contract.\"},\"BicycleType\":{\"Options\":[{\"Label\":\"Elektrische fiets\",\"Value\":\"Electric\",\"ToolTip\":\"Tot 25 km/u\"},{\"Label\":\"Stadsfiets\",\"Value\":\"City\",\"ToolTip\":null}],\"Type\":\"RadioButtonList\",\"HelpText\":null,\"Label\":\"Type fiets\"},\"PurchasePrice\":{\"Type\":\"NumericInput\",\"Label\":\"Aankoopprijs\",\"HelpText\":null},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Label\":\"Fietsbijstand\",\"Price\":\"&euro; 31 per jaar\"}],\"FinishButtonLabel\":\"Bestel online\"},\"UpdateModel\":{\"Valid\":false,\"SpartaProductCode\":\"FIETSV-001\",\"TotalPrice\":0.0,\"DiscountPrice\":0.0,\"PriceWithoutDiscount\":0.0,\"TotalPriceError\":null,\"BrowserTabId\":\"b907416c-61e4-4be9-a0d2-37747d5ce105\",\"PurchaseDate\":{\"MinDate\":\"2017-11-04\",\"MaxDate\":\"2018-06-04\",\"Date\":null,\"ValidationMessage\":\"Gelieve een datum te selecteren\",\"RequiredValidationMessage\":\"Gelieve een datum te selecteren\",\"Required\":true,\"Valid\":false},\"BicycleType\":\"Electric\",\"PurchasePrice\":{\"MinPrice\":0.0,\"MaxPrice\":10000.0,\"Price\":0.0,\"ValidationMessage\":\"De waarde moet meer zijn dan 0 euro.\",\"RequiredValidationMessage\":\"Dit is een verplicht veld\",\"Required\":true,\"Valid\":false},\"ProductOptions\":[{\"SpartaProductOptionsCode\":\"FIETS-006\",\"Type\":\"Checkbox\",\"Value\":\"1\"}],\"RedirectUrl\":null}}"
								}
							]
						},
						{
							"name": "Calculatorupdate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cc56af6d-cb1f-43dc-b021-65873fb03519",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Get Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Jouw VAB Fietsverzekering",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"UpdateFunnelComponentsActions\": [{\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }, {\r\n    \"Name\": \"contract\",\r\n    \"Url\": \"api/funnel/components/contract/init\",\r\n    \"Action\": \"Get\"\r\n  }],\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"FrameNumber\": {\r\n    \"ValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": false,\r\n    \"Text\": \"654987\"\r\n  },\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Frame Number",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/bicycle/init?browserTabId={{browserTabId}}&productId={{productIdFv}}\n",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"bicycle",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update contract dates",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Valid\": true,\r\n\t\"UpdateFunnelComponentsActions\": [{\r\n\t\t\"Name\": \"calculator\",\r\n\t\t\"Url\": \"api/funnel/components/calculator/init\",\r\n\t\t\"Action\": \"Get\"\r\n\t}],\r\n\t\"SpartaProductCode\": null,\r\n\t\"BrowserTabId\": \"{{browserTabId}}\",\r\n\t\"StartDate\": {\r\n\t\t\"MinDate\": \"{{minDate}}\",\r\n\t\t\"MaxDate\": \"{{maxDate}}\",\r\n\t\t\"Date\": \"{{currentDate}}\",\r\n\t\t\"ValidationMessage\": \"\",\r\n\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\"Required\": true,\r\n\t\t\"Valid\": true\r\n\t},\r\n\t\"EndDate\": {\r\n\t\t\"MinDate\": null,\r\n\t\t\"MaxDate\": null,\r\n\t\t\"Date\": \"2019-05-09\",\r\n\t\t\"ValidationMessage\": \"\",\r\n\t\t\"RequiredValidationMessage\": null,\r\n\t\t\"Required\": false,\r\n\t\t\"Valid\": true\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/contract/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"contract",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contract details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/calculator/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"calculator",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Gegevens",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Valid\": false,\r\n\t\"Person\": {\r\n\t\t\"Salutation\": {\r\n\t\t\t\"Options\": [{\r\n\t\t\t\t\"Label\": \"De heer\",\r\n\t\t\t\t\"Value\": \"Dhr.\",\r\n\t\t\t\t\"ToolTip\": null\r\n\t\t\t}, {\r\n\t\t\t\t\"Label\": \"Mevrouw\",\r\n\t\t\t\t\"Value\": \"Mevr.\",\r\n\t\t\t\t\"ToolTip\": null\r\n\t\t\t}],\r\n\t\t\t\"ValidationMessage\": null,\r\n\t\t\t\"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": null,\r\n\t\t\t\"SelectedValue\": \"Dhr.\"\r\n\t\t},\r\n\t\t\"Firstname\": {\r\n\t\t\t\"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": false,\r\n\t\t\t\"Text\": \"Bob\"\r\n\t\t},\r\n\t\t\"Lastname\": {\r\n\t\t\t\"ValidationMessage\": \"Gelieve een voornaam in te geven van minimum 2 en maximum 75 karakters.\",\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": false,\r\n\t\t\t\"Text\": \"De Bouwer\"\r\n\t\t},\r\n\t\t\"BirthDate\": {\r\n\t\t\t\"MinDate\": \"1868-05-07\",\r\n\t\t\t\"MaxDate\": \"2006-05-07\",\r\n\t\t\t\"Date\": \"1991-08-13\",\r\n\t\t\t\"ValidationMessage\": \"Gelieve een datum te selecteren\",\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": true\r\n\t\t}\r\n\t},\r\n\t\"ContactInfo\": {\r\n\t\t\"Email\": {\r\n\t\t\t\"ValidationMessage\": \"Gelieve een geldig e-mailadres in te vullen\",\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": false,\r\n\t\t\t\"Text\": \"kvk@vab.be\"\r\n\t\t},\r\n\t\t\"Phone\": {\r\n\t\t\t\"ValidationMessage\": null,\r\n\t\t\t\"RequiredValidationMessage\": \"\",\r\n\t\t\t\"Required\": false,\r\n\t\t\t\"Valid\": true,\r\n\t\t\t\"Text\": \"\"\r\n\t\t}\r\n\t},\r\n\t\"Address\": {\r\n\t\t\"PostalCode\": {\r\n\t\t\t\"ValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": false,\r\n\t\t\t\"Text\": \"3201\"\r\n\t\t},\r\n\t\t\"City\": {\r\n\t\t\t\"ValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": false,\r\n\t\t\t\"Text\": \"Langdorp\"\r\n\t\t},\r\n\t\t\"Street\": {\r\n\t\t\t\"ValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": false,\r\n\t\t\t\"Text\": \"Blakerstraat\"\r\n\t\t},\r\n\t\t\"Number\": {\r\n\t\t\t\"ValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": false,\r\n\t\t\t\"Text\": \"99\"\r\n\t\t},\r\n\t\t\"MailBox\": {\r\n\t\t\t\"ValidationMessage\": null,\r\n\t\t\t\"RequiredValidationMessage\": \"\",\r\n\t\t\t\"Required\": false,\r\n\t\t\t\"Valid\": true,\r\n\t\t\t\"Text\": \"\"\r\n\t\t},\r\n\t\t\"Countries\": {\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n\t\t\t\"Valid\": true,\r\n\t\t\t\"ValidationMessage\": null,\r\n\t\t\t\"SelectedValue\": \"B\"\r\n\t\t}\r\n\t},\r\n\t\"Terms\": {\r\n\t\t\"TermsAndConditions\": {\r\n\t\t\t\"Checked\": true,\r\n\t\t\t\"ValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n\t\t\t\"RequiredValidationMessage\": \"Je moet akkoord gaan met de voorwaarden\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": true\r\n\t\t}\r\n\t},\r\n\t\"Domiciliation\": {\r\n\t\t\"SpartaProductCode\": null,\r\n\t\t\"UpdateFunnelComponentsActions\": [{\r\n\t\t\t\"Name\": \"contract\",\r\n\t\t\t\"Url\": \"api/funnel/components/calculator/init\",\r\n\t\t\t\"Action\": \"Get\"\r\n\t\t}, {\r\n\t\t\t\"Name\": \"contract\",\r\n\t\t\t\"Url\": \"api/funnel/components/calculator/init\",\r\n\t\t\t\"Action\": \"Get\"\r\n\t\t}],\r\n\t\t\"BrowserTabId\": \"00000000-0000-0000-0000-000000000000\",\r\n\t\t\"RenewWithDomiciliation\": {\r\n\t\t\t\"Checked\": false,\r\n\t\t\t\"ValidationMessage\": null,\r\n\t\t\t\"RequiredValidationMessage\": null,\r\n\t\t\t\"Required\": false,\r\n\t\t\t\"Valid\": true\r\n\t\t},\r\n\t\t\"Iban\": {\r\n\t\t\t\"ValidationMessage\": null,\r\n\t\t\t\"RequiredValidationMessage\": \"Dit is geen geldig IBAN nummer\",\r\n\t\t\t\"Required\": true,\r\n\t\t\t\"Valid\": null,\r\n\t\t\t\"Text\": null\r\n\t\t}\r\n\t},\r\n\t\"SpartaProductCode\": null,\r\n\t\"BrowserTabId\": \"{{browserTabId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/person/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"person",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Behoefteanalyse",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Behoefteanalyse",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": false,\r\n  \"SpartaProductCode\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"Questions\": [\r\n    {\r\n      \"NecessityAnalysisQuestions\": \"ProtectBicycleAgainstTheft\",\r\n      \"Options\": [\r\n        {\r\n          \"Label\": null,\r\n          \"Value\": \"\",\r\n          \"ToolTip\": null\r\n        }\r\n      ],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"0\"\r\n    },\r\n    {\r\n      \"NecessityAnalysisQuestions\": \"BicycleBreakdown\",\r\n      \"Options\": [\r\n        {\r\n          \"Label\": null,\r\n          \"Value\": \"\",\r\n          \"ToolTip\": null\r\n        }\r\n      ],\r\n      \"ValidationMessage\": null,\r\n      \"RequiredValidationMessage\": \"Radio button is verplicht\",\r\n      \"Required\": true,\r\n      \"Valid\": null,\r\n      \"SelectedValue\": \"0\"\r\n    }\r\n  ],\r\n  \"ResponseText\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/necessityanalysis/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"necessityanalysis",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contentmodel",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/payment/init?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"payment",
										"init"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Actiecode",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DiscountCode\": {\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": null,\r\n    \"Required\": false,\r\n    \"Valid\": true,\r\n    \"Text\": null\r\n  },\r\n  \"ValidateButton\": {},\r\n  \"UpdateFunnelComponentsActions\": [\r\n    {\r\n      \"Name\": \"calculator\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    },\r\n    {\r\n      \"Name\": \"calculator\",\r\n      \"Url\": \"api/funnel/components/calculator/init\",\r\n      \"Action\": \"Get\"\r\n    }\r\n  ],\r\n  \"SpartaProductCode\": null,\r\n  \"ShowDomiciliationNoCumulMessageAndButtons\": false,\r\n  \"BrowserTabId\": \"757f4e78-f4ec-497f-8678-e10f19ddd326\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/funnel/components/discount/update?browserTabId={{browserTabId}}&productId={{productIdFv}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"funnel",
										"components",
										"discount",
										"update"
									],
									"query": [
										{
											"key": "browserTabId",
											"value": "{{browserTabId}}"
										},
										{
											"key": "productId",
											"value": "{{productIdFv}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bb088ad3-bd7d-48ee-acec-06fbc1529bb1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "25569918-dda9-4e06-aa1a-18b7ba728849",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0fe35390-392f-4604-a16a-bad9d1d7cc9e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a974d295-5f98-45d2-b716-ea7d50983205",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Check Labels (language)",
			"item": [
				{
					"name": "Labels Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/nl/api/labels/index",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"nl",
								"api",
								"labels",
								"index"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "negatieve testen",
			"item": [
				{
					"name": "Electric bike neg",
					"item": [
						{
							"name": "Calculatorupdate Invalid SpartaProductCode empty values",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f7b5149a-fa5b-4ebb-b32a-d47a65121a15",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "558bb896-9cf7-4df3-acfc-59794f205303",
										"exec": [
											"/*",
											"// Check if the response code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Check if the form is Valid",
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											"",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Calculatorupdate minprice > maxprice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3343631a-d8ee-45a4-b08e-71edf4d562ce",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dba00d8c-8a1e-4bab-a41e-5a364d4b3e98",
										"exec": [
											"/*",
											"// Check if the response code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Check if the form is Valid",
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											"",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 150,\r\n    \"MaxPrice\": 100,\r\n    \"Price\": 1500,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"TANK-0012\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Calculatorupdate Invalid SpartaProductCode2 price > maxprice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "06a803b7-d325-420e-83bd-69d99aa65664",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b5a4f50d-590b-4160-9d46-2d789cc48e66",
										"exec": [
											"/*",
											"// Check if the response code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Check if the form is Valid",
											"pm.test(\"Test: Invalid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(false);",
											"});",
											"",
											"*/",
											"",
											"pm.test(\"test price > maxprice -> validationmessage: De waarde mag maximum 10.000 euro zijn\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PurchasePrice.ValidationMessage).to.eql(\"De waarde mag maximum 10.000 euro zijn.\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": 1500000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"TANK-0012\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Calculatorupdate with Product Option negative price",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "650e0726-ca9f-46d6-a0c1-f36cfe0ea29f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b1dafccd-d231-400c-8d00-4719379815b4",
										"exec": [
											"// Check if the response code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Check if the form is Valid",
											"pm.test(\"Test: Valid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(true);",
											"});",
											"",
											"// Check The Total price without adding a product option",
											"pm.test(\"Test: Total Price Without Product Options\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TotalPrice).to.eql(338.99); // KP-73 tijdelijke aanpassing in afwachting van nauwkeurigere prijs door KLA",
											"});",
											"",
											"// Check Purchase Date",
											"pm.test(\"Test: Purchase Date\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
											"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
											"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
											"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
											"});",
											"",
											"// Check Bicycle Type",
											"pm.test(\"Test: BicycleType\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.BicycleType).to.eql(\"E-Bike\");",
											"});",
											"",
											"// Check Purchase Price",
											"pm.test(\"Test: Purchase Price\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
											"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(10000);",
											"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"8000,00\");",
											"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
											"});",
											"",
											"// Check Product Option disabled",
											"pm.test(\"Test: Product Option disabled\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"1\");",
											"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
											"    ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": -8000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"1\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Calculatorupdate without Product Option negative price",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9d4df0eb-ee5e-4091-b247-fbc165602e8d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bb2ba9dd-d34b-443f-8649-af32fd45f5ad",
										"exec": [
											"// Check if the response code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Check if the form is Valid",
											"pm.test(\"Test: Valid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(true);",
											"});",
											"",
											"// Check The Total price without adding a product option",
											"pm.test(\"Test: Total Price Without Product Options\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TotalPrice).to.eql(192.5);",
											"});",
											"",
											"// Check Purchase Date",
											"pm.test(\"Test: Purchase Date\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
											"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
											"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
											"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
											"});",
											"",
											"// Check Bicycle Type",
											"pm.test(\"Test: BicycleType\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.BicycleType).to.eql(\"E-Bike\");",
											"});",
											"",
											"// Check Purchase Price",
											"pm.test(\"Test: Purchase Price\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
											"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(10000);",
											"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"5000,00\");",
											"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
											"});",
											"",
											"// Check Product Option disabled",
											"pm.test(\"Test: Product Option disabled\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"0\");",
											"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
											"    ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10000,\r\n    \"Price\": -5000,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						},
						{
							"name": "Calculatorupdate change maxprice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b1f252f5-8cf4-4129-a055-6ecbfbed3ffa",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f574c89d-9975-47ba-a5cd-8c0dfe67d1e0",
										"exec": [
											"// Check if the response code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Check if the form is Valid",
											"pm.test(\"Test: Valid Form\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Valid).to.eql(true);",
											"});",
											"",
											"// Check The Total price without adding a product option",
											"pm.test(\"Test: Total Price Without Product Options\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TotalPrice).to.eql(25);",
											"});",
											"",
											"// Check Purchase Date",
											"pm.test(\"Test: Purchase Date\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PurchaseDate.Date).to.eql(pm.globals.get(\"currentDate\"));",
											"    pm.expect(jsonData.PurchaseDate.MinDate).to.eql(pm.environment.get(\"minDate\"));",
											"    pm.expect(jsonData.PurchaseDate.MaxDate).to.eql(pm.environment.get(\"maxDate\"));",
											"    pm.expect(jsonData.PurchaseDate.Valid).to.eql(true);",
											"});",
											"",
											"// Check Bicycle Type",
											"pm.test(\"Test: BicycleType\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.BicycleType).to.eql(\"E-Bike\");",
											"});",
											"",
											"// Check Purchase Price",
											"pm.test(\"Test: Purchase Price\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PurchasePrice.MinPrice).to.eql(0);",
											"    pm.expect(jsonData.PurchasePrice.MaxPrice).to.eql(10000);",
											"    pm.expect(jsonData.PurchasePrice.Price).to.eql(\"50,00\");",
											"    pm.expect(jsonData.PurchasePrice.Valid).to.eql(true);",
											"});",
											"",
											"// Check Product Option disabled",
											"pm.test(\"Test: Product Option disabled\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductOptions[0].Value).to.eql(\"0\");",
											"    pm.expect(jsonData.ProductOptions[0].SpartaProductOptionsCode).to.eql(\"FIETS-006\");",
											"    ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Valid\": true,\r\n  \"SpartaProductCode\": \"FIETSV-001\",\r\n  \"TotalPrice\": 108,\r\n  \"DiscountPrice\": null,\r\n  \"PriceWithoutDiscount\": null,\r\n  \"TotalPriceError\": null,\r\n  \"BrowserTabId\": \"{{browserTabId}}\",\r\n  \"PurchaseDate\": {\r\n    \"MinDate\": \"{{minDate}}\",\r\n    \"MaxDate\": \"{{maxDate}}\",\r\n    \"Date\": \"{{currentDate}}\",\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"BicycleType\": \"E-Bike\",\r\n  \"PurchasePrice\": {\r\n    \"MinPrice\": 0,\r\n    \"MaxPrice\": 10001,\r\n    \"Price\": 50,\r\n    \"ValidationMessage\": \"\",\r\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\r\n    \"Required\": true,\r\n    \"Valid\": true\r\n  },\r\n  \"ProductOptions\": [\r\n    {\r\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\r\n      \"Type\": \"Checkbox\",\r\n      \"Value\": \"0\"\r\n    }\r\n  ],\r\n  \"RedirectUrl\": null\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/api/products/{{productIdFv}}/calculatorupdate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"products",
										"{{productIdFv}}",
										"calculatorupdate"
									]
								},
								"description": "/*\nThe body for an electric bike\n\n{\n  \"Valid\": false,\n  \"SpartaProductCode\": \"FIETSV-001\",\n  \"TotalPrice\": 0,\n  \"DiscountPrice\": 0,\n  \"PriceWithoutDiscount\": 0,\n  \"TotalPriceError\": null,\n  \"BrowserTabId\": \"b94b502e-9816-4a19-8041-178989c53120\",\n  \"PurchaseDate\": {\n    \"MinDate\": \"2017-10-27\",\n    \"MaxDate\": \"2018-05-27\",\n    \"Date\": null,\n    \"ValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"RequiredValidationMessage\": \"Gelieve een datum te selecteren\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"BicycleType\": \"Electric\",\n  \"PurchasePrice\": {\n    \"MinPrice\": 0,\n    \"MaxPrice\": 2000,\n    \"Price\": 0,\n    \"ValidationMessage\": \"De waarde moet meer zijn dan 0 euro.\",\n    \"RequiredValidationMessage\": \"Dit is een verplicht veld\",\n    \"Required\": true,\n    \"Valid\": false\n  },\n  \"ProductOptions\": [\n    {\n      \"SpartaProductOptionsCode\": \"FIETS-006\",\n      \"Type\": \"Checkbox\",\n      \"Value\": \"1\"\n    }\n  ],\n  \"RedirectUrl\": null\n}\n\n\n\n*/"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Check Bijstand options",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "210719a4-f4b5-4769-b08a-ee35b64fa2ae",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/api/products/{{productIdFv}}/optionsinit",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"api",
						"products",
						"{{productIdFv}}",
						"optionsinit"
					]
				},
				"description": "This API is to check the extra options to puchase ontop of the insurance"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f2495fba-f2a4-461e-bdbf-e4f3ef524c5a",
				"type": "text/javascript",
				"exec": [
					"var moment = require('moment')",
					"pm.globals.set(\"currentDate\", moment().format(\"YYYY-MM-DD\"))",
					"",
					"var today = moment();",
					"var tomorrow = moment(today).add(1, 'days');",
					"",
					"pm.globals.set(\"tomorrowDate\", moment(tomorrow).format(\"DD-MM-YYYY\"));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "114d0fc5-ce89-486a-8d4a-ab9f6305629a",
				"type": "text/javascript",
				"exec": [
					"/*",
					"// Check the response time",
					"pm.test(\"Response time is less than 500ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(500);",
					"});",
					"*/",
					"",
					"/*",
					"var XFrameOptions2 = postman.getEnvironmentVariable(\"XFrameOptions\")",
					"",
					"if (XFrameOptions2 === \"true\") {",
					"    ",
					"pm.test(\"X-Frame-Options is present\", function () {",
					"    pm.response.to.have.header(\"X-Frame-Options\");",
					"});",
					"",
					"pm.test(\"X-Frame-Options is SAMEORIGIN\", function () {",
					"    pm.response.to.be.header(\"X-Frame-Options\",\"SAMEORIGIN\");",
					"});",
					"",
					"}*/"
				]
			}
		}
	],
	"variable": [
		{
			"id": "b6e6d5db-7316-4f07-a0bd-95847c303b7e",
			"key": "productIdFv",
			"value": "2574395a-fce1-4135-9f41-c609f2ba039d",
			"type": "string"
		},
		{
			"id": "e45ba879-8ff3-477a-a7c1-bfa1f93e20ea",
			"key": "minPriceElectric",
			"value": "0",
			"type": "string"
		},
		{
			"id": "644c9150-44f3-4968-aac5-b922d90577b5",
			"key": "maxPriceElectric",
			"value": "10000",
			"type": "string"
		},
		{
			"id": "3312508f-4f5b-4733-8620-6e7c1e0bd7fa",
			"key": "minPriceCity",
			"value": "0",
			"type": "string"
		},
		{
			"id": "fed3d4d7-5a0c-4994-97ec-76b6aa6137e9",
			"key": "maxPriceCity",
			"value": "2000",
			"type": "string"
		},
		{
			"id": "24dae6d2-7ab6-4170-b745-05e656f326a0",
			"key": "24dae6d2-7ab6-4170-b745-05e656f326a0",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}